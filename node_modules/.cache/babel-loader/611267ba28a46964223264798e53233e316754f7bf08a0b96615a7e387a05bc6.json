{"ast":null,"code":"var _jsxFileName = \"C:\\\\whackiest\\\\nestmatch-frontend\\\\src\\\\pages\\\\PGSearcherLogin.jsx\",\n  _s = $RefreshSig$();\n// src/pages/PGSearcherLogin.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PGSearcherLogin = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [otp, setOtp] = useState('');\n  const [password, setPassword] = useState('');\n  const [step, setStep] = useState(1); // Step: 1 = Email, 2 = OTP, 3 = Password\n  const [errorMessage, setErrorMessage] = useState('');\n  const [otpSent, setOtpSent] = useState(false); // Flag for OTP sent status\n\n  // Step 1: Handle email submission\n  const handleEmailSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3000/api/send-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (response.ok) {\n        setOtpSent(true);\n        setStep(2); // Move to OTP verification step\n      } else {\n        setErrorMessage('Failed to send OTP. Please try again.');\n      }\n    } catch (err) {\n      setErrorMessage('An error occurred. Please try again.');\n    }\n  };\n\n  // Step 2: Handle OTP verification\n  const handleOtpSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3000/api/verify-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          otp\n        })\n      });\n      if (response.ok) {\n        setStep(3); // Move to password setting\n      } else {\n        setErrorMessage('Invalid OTP. Please try again.');\n      }\n    } catch (err) {\n      setErrorMessage('An error occurred. Please try again.');\n    }\n  };\n\n  // Step 3: Handle password setting\n  const handlePasswordSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3000/api/set-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        alert('Password set successfully!');\n        window.location.href = '/account-preferences'; // Redirect to preferences page\n      } else {\n        setErrorMessage('Failed to set password. Please try again.');\n      }\n    } catch (err) {\n      setErrorMessage('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginPageWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"PG Searcher Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleEmailSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        required: true,\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), step === 2 && otpSent && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleOtpSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter OTP:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        placeholder: \"Enter OTP sent to your email\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), step === 3 && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePasswordSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Set Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        required: true,\n        placeholder: \"Enter your new password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Set Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(PGSearcherLogin, \"l6iyPSBE+ebX4C+Dd33IVOHh7U0=\");\n_c = PGSearcherLogin;\nexport default PGSearcherLogin;\nvar _c;\n$RefreshReg$(_c, \"PGSearcherLogin\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PGSearcherLogin","_s","email","setEmail","otp","setOtp","password","setPassword","step","setStep","errorMessage","setErrorMessage","otpSent","setOtpSent","handleEmailSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","err","handleOtpSubmit","handlePasswordSubmit","alert","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","required","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/whackiest/nestmatch-frontend/src/pages/PGSearcherLogin.jsx"],"sourcesContent":["// src/pages/PGSearcherLogin.js\r\nimport React, { useState } from 'react';\r\n\r\nconst PGSearcherLogin = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [step, setStep] = useState(1); // Step: 1 = Email, 2 = OTP, 3 = Password\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [otpSent, setOtpSent] = useState(false); // Flag for OTP sent status\r\n\r\n  // Step 1: Handle email submission\r\n  const handleEmailSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:3000/api/send-otp', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setOtpSent(true);\r\n        setStep(2); // Move to OTP verification step\r\n      } else {\r\n        setErrorMessage('Failed to send OTP. Please try again.');\r\n      }\r\n    } catch (err) {\r\n      setErrorMessage('An error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Step 2: Handle OTP verification\r\n  const handleOtpSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:3000/api/verify-otp', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, otp }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setStep(3); // Move to password setting\r\n      } else {\r\n        setErrorMessage('Invalid OTP. Please try again.');\r\n      }\r\n    } catch (err) {\r\n      setErrorMessage('An error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Step 3: Handle password setting\r\n  const handlePasswordSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:3000/api/set-password', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Password set successfully!');\r\n        window.location.href = '/account-preferences'; // Redirect to preferences page\r\n      } else {\r\n        setErrorMessage('Failed to set password. Please try again.');\r\n      }\r\n    } catch (err) {\r\n      setErrorMessage('An error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"loginPageWrapper\">\r\n      <h2>PG Searcher Login</h2>\r\n      {step === 1 && (\r\n        <form onSubmit={handleEmailSubmit}>\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <button type=\"submit\">Send OTP</button>\r\n        </form>\r\n      )}\r\n\r\n      {step === 2 && otpSent && (\r\n        <form onSubmit={handleOtpSubmit}>\r\n          <label>Enter OTP:</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"Enter OTP sent to your email\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n          />\r\n          <button type=\"submit\">Verify OTP</button>\r\n        </form>\r\n      )}\r\n\r\n      {step === 3 && (\r\n        <form onSubmit={handlePasswordSubmit}>\r\n          <label>Set Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            placeholder=\"Enter your new password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <button type=\"submit\">Set Password</button>\r\n        </form>\r\n      )}\r\n\r\n      {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PGSearcherLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}